{"version":3,"sources":["components/HomePage/HomePage.tsx","components/PageNavLink/PageNavLink.tsx","components/NavBar/NavBar.tsx","components/PageNotFound/PageNotFound.tsx","api.ts","utils/getPeopleParents.tsx","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","components/PeoplePage/PeoplePage.tsx","App.tsx","index.tsx"],"names":["HomePage","_jsx","className","children","PageNavLink","_ref","to","title","NavLink","_ref2","isActive","classNames","NavBar","role","_jsxs","PageNotFound","API_URL","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","getPeopleParents","people","map","person","_objectSpread","mother","find","p","name","motherName","father","fatherName","Loader","PersonLink","slug","sex","Link","concat","PeopleTable","_useParams$slug","useParams","NeedSlug","_Fragment","born","died","preparedMotherName","preparedFatherName","PeoplePage","_useState","useState","_useState2","_slicedToArray","setPeople","_useState3","_useState4","fetchError","setFetchError","_useState5","_useState6","isLoading","setIsLoading","peopleMesageError","length","isPeople","fetchPeople","_asyncToGenerator","_regeneratorRuntime","mark","_callee","peopleFromServer","preparetedPeople","wrap","_context","prev","next","sent","t0","finish","stop","apply","arguments","useEffect","App","Routes","Route","path","element","Navigate","replace","index","createRoot","document","getElementById","render","Router"],"mappings":"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","file":"static/js/main.e6056c02.chunk.js","sourcesContent":["export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\ntype Props = {\n  to: string\n  title: string\n};\n\nexport const PageNavLink: React.FC<Props> = ({ to, title }) => (\n  <NavLink\n    className={({ isActive }) => (classNames('navbar-item', {\n      'has-background-grey-lighter': isActive,\n    }))}\n    to={to}\n  >\n    {title}\n  </NavLink>\n);\n","import { PageNavLink } from '../PageNavLink/PageNavLink';\n\nexport const NavBar = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <PageNavLink to=\"/\" title=\"Home\" />\n        <PageNavLink to=\"people\" title=\"People\" />\n      </div>\n    </div>\n  </nav>\n);\n","export const PageNotFound = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { Person } from '../types';\n\nexport function getPeopleParents(people: Person[]): Person[] {\n  return people.map(person => ({\n    ...person,\n    mother: people.find(p => p.name === person.motherName),\n    father: people.find(p => p.name === person.fatherName),\n  }));\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person,\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const { slug, sex, name } = person;\n\n  return (\n    <Link\n      to={`/people/${slug}`}\n      className={classNames({\n        'has-text-danger': sex === 'f',\n      })}\n    >\n      {name}\n    </Link>\n  );\n};\n","import classNames from 'classnames';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink/PersonLink';\n\ntype Props = {\n  people: Person[],\n\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  const { slug: NeedSlug = '' } = useParams();\n\n  return (\n    <>\n      <table\n        data-cy=\"peopleTable\"\n        className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n      >\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Sex</th>\n            <th>Born</th>\n            <th>Died</th>\n            <th>Mother</th>\n            <th>Father</th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {people.map(person => {\n            const {\n              sex,\n              born,\n              died,\n              fatherName,\n              motherName,\n              slug,\n              mother,\n              father,\n            } = person;\n\n            const preparedMotherName = motherName || '-';\n            const preparedFatherName = fatherName || '-';\n\n            return (\n              <tr\n                data-cy=\"person\"\n                key={slug}\n                className={classNames({\n                  'has-background-warning': NeedSlug === slug,\n                })}\n              >\n                <td>\n                  <PersonLink person={person} />\n                </td>\n\n                <td>{sex}</td>\n                <td>{born}</td>\n                <td>{died}</td>\n                <td>\n                  {mother ? (\n                    <PersonLink person={mother} />\n                  ) : (\n                    preparedMotherName\n                  )}\n                </td>\n                <td>\n                  {father ? (\n                    <PersonLink person={father} />\n                  ) : (\n                    preparedFatherName\n                  )}\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types';\nimport { getPeopleParents } from '../../utils/getPeopleParents';\nimport { Loader } from '../Loader';\nimport { PeopleTable } from '../PeopleTable/PeopleTable';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [fetchError, setFetchError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const peopleMesageError = !isLoading && !fetchError && !people.length;\n  const isPeople = !isLoading && !!people.length;\n\n  const fetchPeople = async () => {\n    try {\n      setIsLoading(true);\n      const peopleFromServer = await getPeople();\n      const preparetedPeople = getPeopleParents(peopleFromServer);\n\n      setPeople(preparetedPeople);\n    } catch {\n      setFetchError(true);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchPeople();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && (\n            <Loader />\n          )}\n\n          {fetchError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {peopleMesageError && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {isPeople && (\n            <PeopleTable people={people} />\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import { Navigate, Route, Routes } from 'react-router-dom';\nimport './App.scss';\nimport { HomePage } from './components/HomePage/HomePage';\nimport { NavBar } from './components/NavBar/NavBar';\nimport { PageNotFound } from './components/PageNotFound/PageNotFound';\nimport { PeoplePage } from './components/PeoplePage/PeoplePage';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <NavBar />\n\n    <main className=\"section\">\n      <div className=\"container\">\n\n        <Routes>\n          <Route path=\"*\" element={<PageNotFound />} />\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n        </Routes>\n\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}